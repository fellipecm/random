---
apiVersion: configuration.konghq.com/v1
kind: KongClusterPlugin
metadata:
  name: acl-deny-all
  annotations:
    kubernetes.io/ingress.class: kong
  labels:
    global: "true"
config:
  allow: ["x"]
  hide_groups_header: true
plugin: acl
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: basic-auth
  namespace: kong
config:
  hide_credentials: true
plugin: basic-auth
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: basic-auth-anon-kong
  namespace: kong
config:
  hide_credentials: false
  anonymous: "anonymous-users-kong"
plugin: basic-auth
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  name: "anonymous-users-kong"
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: kong
username: "anonymous-users-kong"
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: acl-allow-all-kong
  annotations:
    kubernetes.io/ingress.class: kong
  namespace: kong
config:
  deny: ["x"]
  hide_groups_header: true
plugin: acl
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: healthcheck-request-termination
  namespace: kong
config:
  status_code: 200
  message: success
plugin: request-termination
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-healthcheck
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: kong
    konghq.com/plugins: basic-auth-anon-kong,acl-allow-all-kong,healthcheck-request-termination
spec:
  rules:
  - http:
      paths:
      - path: /healthcheck
        backend:
          service:
            name: kong-kong-proxy
            port:
              number: 443
        pathType: Prefix
...